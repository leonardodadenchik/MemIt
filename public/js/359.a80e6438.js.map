{"version":3,"file":"js/359.a80e6438.js","mappings":"yGAAA,MAAMA,GAAQC,SAASC,OAAOC,QAAQ,QAAS,MAAQ,QAClDA,QAAQ,QAAS,IACjBA,QAAQ,QAAS,IAChBC,EAAO,IAAIC,UAAUL,GAE3B,U,mBCLA,QACIM,WAAOC,EACPC,gBAAYD,I,mBCFhB,QACIE,KAAM,SACNC,KAAM,uB,0HCDNC,EAAAA,EAAAA,IAAW,O,kCAMf,GACIC,MAAO,CACHC,KAAM,CACFC,KAAMC,OACNC,UAAU,IAGlBC,UACI,IAAIC,SAAQ,CAACC,EAASC,KAClB,MAAMC,EAAY,KACdjB,EAAAA,EAAAA,KACIkB,KAAKC,UAAU,CACXC,QAAS,kBACTC,UAAWC,KAAKb,KAChBJ,KAAMkB,EAAAA,EAAAA,QAGdvB,EAAAA,EAAAA,UAAkBwB,IAEd,OADAA,EAAcN,KAAKO,MAAMD,EAAYE,MAC7BF,EAAYJ,SAChB,IAAK,gBACDI,EAAYtB,OAASsB,EAAYpB,YACzBuB,EAAAA,EAAAA,MAAgBA,EAAAA,EAAAA,YAAuB,CACrCH,EAAYtB,MACZsB,EAAYpB,YAEhBY,EAAOQ,EAAYI,QACzB,MACJ,IAAK,gBACDb,EAAQS,EAAYK,WACpB,SAKhB,IAAIC,EAAQC,aAAY,KACG,GAAnB/B,EAAAA,EAAAA,aACAgC,cAAcF,GACdb,OAEL,QAEFgB,MAAMC,IACHZ,KAAKa,QAAQC,KAAK,CACd/B,KAAM,OACNgC,OAAQ,CACJC,eAAgBJ,EAChBzB,KAAMa,KAAKb,KACX8B,SAAUL,EAAeM,aAIpCC,OAAOC,IACH,CACG,mBACA,sBACA,oBACFC,SAASD,GACLpB,KAAKa,QAAQC,KAAK,CACd/B,KAAM,OACNgC,OAAQ,CACJO,SAAUtB,KAAKb,KACfoC,QAASH,KAGjBpB,KAAKa,QAAQC,KAAK,CACdU,KAAM,e,QCpEhC,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE","sources":["webpack://client/./src/assets/myWs/myWs.js","webpack://client/./src/assets/playerData/gameData.js","webpack://client/./src/assets/playerData/playerData.js","webpack://client/./src/views/notContent/connectingProc.vue","webpack://client/./src/views/notContent/connectingProc.vue?f7de"],"sourcesContent":["const host = (location.origin.replace(/^http/, 'ws') + ':80/')\n    .replace(':3000', '')\n    .replace(':8080', '')\nconst myWs = new WebSocket(host)\n\nexport default myWs\n","export default {\n    cards: undefined,\n    situations: undefined,\n}\n","export default {\n    name: 'Player',\n    post: 'example.@gmail.com',\n}\n","<template>\n    <div></div>\n</template>\n<script>\nimport myWs from '../../assets/myWs/myWs.js'\nimport gameData from '../../assets/playerData/gameData.js'\nimport playerData from '../../assets/playerData/playerData.js'\nexport default {\n    props: {\n        code: {\n            type: String,\n            required: true,\n        },\n    },\n    created() {\n        new Promise((resolve, reject) => {\n            const connectMe = () => {\n                myWs.send(\n                    JSON.stringify({\n                        content: 'connect_to_room',\n                        room_code: this.code,\n                        name: playerData.name,\n                    })\n                )\n                myWs.onmessage = (jsonMessage) => {\n                    jsonMessage = JSON.parse(jsonMessage.data)\n                    switch (jsonMessage.content) {\n                        case 'connectingAns':\n                            jsonMessage.cards && jsonMessage.situations\n                                ? ([gameData.cards, gameData.situations] = [\n                                      jsonMessage.cards,\n                                      jsonMessage.situations,\n                                  ])\n                                : reject(jsonMessage.status)\n                            break\n                        case 'players_names':\n                            resolve(jsonMessage.nicknames)\n                            break\n                    }\n                }\n            }\n\n            var timer = setInterval(() => {\n                if (myWs.readyState != 0) {\n                    clearInterval(timer)\n                    connectMe()\n                }\n            }, 100)\n        })\n            .then((playerNameList) => {\n                this.$router.push({\n                    name: 'wait',\n                    params: {\n                        propPlayerList: playerNameList,\n                        code: this.code,\n                        propMyId: playerNameList.length,\n                    },\n                })\n            })\n            .catch((reason) => {\n                ;[\n                    'Кімната не існує',\n                    'Кімната переповнена',\n                    'Гра вже почалася',\n                ].includes(reason)\n                    ? this.$router.push({\n                          name: 'join',\n                          params: {\n                              propCode: this.code,\n                              request: reason,\n                          },\n                      })\n                    : this.$router.push({\n                          path: 'error',\n                      })\n            })\n    },\n}\n</script>\n","import { render } from \"./connectingProc.vue?vue&type=template&id=0b372fa0\"\nimport script from \"./connectingProc.vue?vue&type=script&lang=js\"\nexport * from \"./connectingProc.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\programming\\\\MemIt\\\\client\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["host","location","origin","replace","myWs","WebSocket","cards","undefined","situations","name","post","_createElementBlock","props","code","type","String","required","created","Promise","resolve","reject","connectMe","JSON","stringify","content","room_code","this","playerData","jsonMessage","parse","data","gameData","status","nicknames","timer","setInterval","clearInterval","then","playerNameList","$router","push","params","propPlayerList","propMyId","length","catch","reason","includes","propCode","request","path","__exports__","render"],"sourceRoot":""}