"use strict";(self["webpackChunkclient"]=self["webpackChunkclient"]||[]).push([[500],{3691:function(e,t){const n=(location.origin.replace(/^http/,"ws")+":8814/").replace(":3000","").replace(":8080",""),r=new WebSocket(n);t["Z"]=r},3566:function(e,t){t["Z"]={cards:void 0,situations:void 0}},8877:function(e,t){t["Z"]={name:"Player",post:"example.@gmail.com"}},6500:function(e,t,n){n.r(t),n.d(t,{default:function(){return p}});var r=n(3396);function o(e,t,n,o,a,s){return(0,r.wg)(),(0,r.iD)("div")}var a=n(3691),s=n(3566),c=n(8877),i={props:{code:{type:String,required:!0}},created(){new Promise(((e,t)=>{const n=()=>{a.Z.send(JSON.stringify({content:"connect_to_room",room_code:this.code,name:c.Z.name})),a.Z.onmessage=n=>{switch(n=JSON.parse(n.data),n.content){case"connectingAns":n.cards&&n.situations?[s.Z.cards,s.Z.situations]=[n.cards,n.situations]:t(n.status);break;case"players_names":e(n.nicknames);break}}};var r=setInterval((()=>{0!=a.Z.readyState&&(clearInterval(r),n())}),100)})).then((e=>{this.$router.push({name:"wait",params:{propPlayerList:e,code:this.code,propMyId:e.length}})})).catch((e=>{["roomNotFound","roomIsFool","GameStarted"].includes(e)?this.$router.push({name:"join",params:{propCode:this.code,request:e}}):this.$router.push({path:"error"})}))}},u=n(89);const d=(0,u.Z)(i,[["render",o]]);var p=d}}]);
//# sourceMappingURL=500.39acc062.js.map