{"version":3,"file":"js/82.5a8dce65.js","mappings":"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","sources":["webpack://client/./src/assets/myWs/myWs.js","webpack://client/./src/assets/playerData/gameData.js","webpack://client/./src/views/GameView.vue","webpack://client/./src/views/GameView.vue?3e8c"],"sourcesContent":["const host = (location.origin.replace(/^http/, \"ws\") + \":8814/\")\n  .replace(\":3000\", \"\")\n  .replace(\":8080\", \"\");\nconst myWs = new WebSocket(host);\n\nexport default myWs;\n","export default {\n  cards: undefined,\n  situations: undefined,\n};\n","<template>\n  <div class=\"game\">\n    <div class=\"timerDiv\">\n      <h1>Move time: {{ this.timerStep }}</h1>\n    </div>\n    <div class=\"playersZone\">\n      <div class=\"player\" v-for=\"(player, idx) in playerList\" :key=\"player\">\n        <div v-if=\"idx + 1 != this.myId\">\n          <div :id=\"`position__${idx + 1 > this.myId ? idx : idx + 1}`\">\n            <h2>{{ player.name }}</h2>\n            <button\n              @click=\"sendVote(idx + 1)\"\n              v-if=\"player.cardStatus != 'selecting...' && !isVoted\"\n            >\n              Vote\n            </button>\n            <img\n              :src=\"imgesUrlGetter(player.cardStatus)\"\n              v-if=\"player.cardStatus != 'selecting...'\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"situationZone\">\n      Ситуація:<br />{{ situations[gameStep - 1] }}\n    </div>\n    <div\n      class=\"cardsZone\"\n      v-show=\"\n        this.playerList[Number(this.myId) - 1].cardStatus == 'selecting...'\n      \"\n    >\n      <div v-for=\"card in cards\" :key=\"card\">\n        <img\n          @click=\"sendCard(card)\"\n          class=\"cardImg\"\n          :src=\"imgesUrlGetter(card)\"\n        />\n      </div>\n      <!--<button @click=\"sendCard()\">Select</button>-->\n    </div>\n  </div>\n</template>\n\n<script>\nimport gameData from \"../assets/playerData/gameData.js\";\nimport myWs from \"../assets/myWs/myWs.js\";\nexport default {\n  data() {\n    return {\n      playerList: [{ name: \"df\", cardStatus: \"selecting...\" }],\n      situations: gameData.situations,\n      cards: gameData.cards,\n      ///timering\n      timerStep: 20,\n      gameStep: 1,\n      timerId: undefined,\n      isVoted: false,\n    };\n  },\n  methods: {\n    timesTimer(time = 30) {\n      clearTimeout(this.timerId);\n      this.timerStep = time - 1;\n      this.timerId = setInterval(() => {\n        if (this.timerStep > 0) {\n          this.timerStep -= 1;\n        } else {\n          clearTimeout(this.timerId);\n        }\n      }, 1000);\n    },\n    myselfUpdatingFunc() {\n      myWs.onmessage = (jsonMessage) => {\n        jsonMessage = JSON.parse(jsonMessage.data);\n        switch (jsonMessage.content) {\n          case \"card_status\":\n            this.playerList.map((el, idx) => {\n              el.cardStatus = jsonMessage.cards[idx];\n              return el;\n            });\n            break;\n          case \"next_step\":\n            this.playerList.map((el) => {\n              return (el.cardStatus = \"selecting...\");\n            });\n            this.gameStep += 1;\n            this.timerStep = 0;\n            this.isVoted = false;\n            this.timesTimer();\n            break;\n          case \"end\":\n            this.$router.push({\n              name: \"play\",\n            });\n            alert(\n              `Game end! Winner is ${\n                jsonMessage.winner != \"\" ? jsonMessage.winner : \"nobody\"\n              }`\n            );\n            break;\n        }\n      };\n    },\n    sendCard(cardToSend) {\n      console.log(cardToSend);\n      myWs.send(\n        JSON.stringify({\n          content: \"card\",\n          card: cardToSend,\n          player_id: this.myId,\n          room_code: this.code,\n        })\n      );\n      // удаляю карту которой походил //\n      this.cards = this.cards.filter((card) => {\n        return card != cardToSend;\n      });\n    },\n    sendVote(id) {\n      this.isVoted = true;\n      myWs.send(\n        JSON.stringify({\n          content: \"vote\",\n          vote: id,\n          room_code: this.code,\n        })\n      );\n    },\n    imgesUrlGetter(cardName) {\n      // return `${location.origin}/imahes_library.${cardName}`\n      return `http://localhost:3000/images_library/${cardName}`;\n    },\n  },\n  props: {\n    propPlayerNameList: {\n      type: Array,\n      required: true,\n    },\n    code: {\n      type: String,\n      required: true,\n    },\n    myId: {\n      type: [String, Number],\n      required: true,\n    },\n  },\n  created() {\n    var timer = setInterval(() => {\n      if (myWs.readyState != 0) {\n        clearInterval(timer);\n        this.myselfUpdatingFunc();\n      }\n    }, 100);\n    this.playerList = this.propPlayerNameList.map((el) => {\n      return {\n        name: el,\n        cardStatus: \"selecting...\",\n      };\n    });\n  },\n  mounted() {\n    this.timesTimer();\n    var cads = Array.from(document.getElementsByClassName(\"cardImg\"));\n\n    var timering = setInterval(() => {\n      if (cads[0].offsetWidth > 0) {\n        clearInterval(timering);\n        cads.forEach((el) => {\n          if (el.offsetWidth / el.offsetHeight > 1) {\n            el.width = el.width * 0.7;\n          }\n        });\n      }\n    }, 100);\n  },\n};\n</script>\n<style scoped>\n.situationZone {\n  position: absolute;\n  font-size: 3vmin;\n  width: 30vw;\n  left: 34vw;\n  height: 10vh;\n  top: 27vh;\n  padding: 2vw;\n}\n.playersZone h2 {\n  display: inline-block;\n  margin-right: 1vw;\n}\n.playersZone button {\n  height: 3.5vh;\n  width: 7vw;\n  border: none;\n  border-radius: 0.5em/0.5em;\n  background-color: rgb(220, 234, 246);\n}\n.playersZone img {\n  position: absolute;\n  left: 0;\n  top: 9vh;\n  height: 18vh;\n  border-radius: 0.2em/0.2em;\n}\n#position__1 {\n  position: absolute;\n\n  width: 25vw;\n  height: 30vh;\n  top: 7vh;\n  left: 0;\n}\n\n#position__2 {\n  position: absolute;\n\n  width: 25vw;\n  height: 30vh;\n  top: 7vh;\n  right: 0;\n}\n#position__3 {\n  position: absolute;\n\n  width: 25vw;\n  height: 30vh;\n  top: 40vh;\n  left: 0;\n}\n#position__4 {\n  position: absolute;\n\n  width: 25vw;\n  height: 30vh;\n  top: 40vh;\n  right: 0;\n}\n.cardsZone {\n  position: absolute;\n  height: 18vh;\n  bottom: 0;\n  width: 100vw;\n}\n.cardsZone div {\n  display: inline-block;\n}\n.cardsZone img {\n  height: 18vh;\n}\n.cardsZone img:hover {\n  transition: all 0.1s ease-in-out 0s;\n  transform: scale(1.1, 1.1);\n}\n</style>\n","import { render } from \"./GameView.vue?vue&type=template&id=0cafccf8&scoped=true\"\nimport script from \"./GameView.vue?vue&type=script&lang=js\"\nexport * from \"./GameView.vue?vue&type=script&lang=js\"\n\nimport \"./GameView.vue?vue&type=style&index=0&id=0cafccf8&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/hasty_files/VsCode projects/mergeV2Test/client/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0cafccf8\"]])\n\nexport default __exports__"],"names":["host","location","origin","replace","myWs","WebSocket","cards","undefined","situations","class","_createElementVNode","_createElementBlock","_toDisplayString","timerStep","_Fragment","_renderList","$data","player","idx","key","myId","_hoisted_4","id","name","cardStatus","onClick","$options","_hoisted_6","src","_hoisted_10","card","playerList","Number","data","gameData","gameStep","timerId","isVoted","methods","timesTimer","time","clearTimeout","this","setInterval","myselfUpdatingFunc","jsonMessage","JSON","parse","content","map","el","$router","push","alert","winner","sendCard","cardToSend","console","log","stringify","player_id","room_code","code","filter","sendVote","vote","imgesUrlGetter","cardName","props","propPlayerNameList","type","Array","required","String","created","timer","clearInterval","mounted","cads","from","document","getElementsByClassName","timering","offsetWidth","forEach","offsetHeight","width","__exports__","render"],"sourceRoot":""}